/*
 * generated by Xtext 2.28.0
 */
package com.epstimis.uddl.query.formatting2

import com.epstimis.uddl.query.query.ProjectedCharacteristicList
import com.epstimis.uddl.query.query.QueryStatement
import com.epstimis.uddl.query.services.QueryGrammarAccess
import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class QueryFormatter extends AbstractFormatter2 {
	
	@Inject extension QueryGrammarAccess

	def dispatch void format(QueryStatement queryStatement, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		queryStatement.projectedCharacteristicList.format
		queryStatement.selectedEntityExpression.format
	}

	def dispatch void format(ProjectedCharacteristicList projectedCharacteristicList, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (projectedCharacteristicExpression : projectedCharacteristicList.characteristic) {
			projectedCharacteristicExpression.format
		}
	}
	
	// TODO: implement for ExplicitSelectedEntityCharacteristicReference, SelectedEntityExpression, FromClause, EntityExpression, EntityJoinExpression, EntityJoinCriteria, EntityTypeCharacteristicEquivalenceExpression, WhereClause, OrderByClause, OrderingExpression, BooleanExpression, BooleanTerm, BooleanFactor, ScalarComparePredicate, SetMembershipPredicate, CharacteristicBasisSet, SetComparePredicate, ExistsPredicate, Subquery
}
